generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("ADMIN")
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String?
  content     String?
  image       String?
  images      String[]
  gallery     String[]
  category    String
  tags        String[]
  client      String?
  year        Int?
  url         String?
  featured    Boolean  @default(false)
  published   Boolean  @default(true)
  views       Int      @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("projects")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  image       String?
  author      String   @default("Admin")
  tags        String[]
  category    String?
  published   Boolean  @default(false)
  featured    Boolean  @default(false)
  views       Int      @default(0)
  readTime    Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blog_posts")
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String?
  phone     String?
  subject   String?
  message   String
  budget    String?
  timeline  String?
  services  String[]
  status    String   @default("NEW")
  read      Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contact_messages")
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  status    String   @default("ACTIVE")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("newsletter")
}

model PageView {
  id        String   @id @default(cuid())
  page      String
  userAgent String?
  ip        String?
  country   String?
  createdAt DateTime @default(now())

  @@index([page])
  @@index([createdAt])
  @@map("page_views")
}

model Analytics {
  id       String   @id @default(cuid())
  page     String
  views    Int      @default(1)
  visitors Int      @default(1)
  date     DateTime @default(now())

  @@map("analytics")
}

model FAQ {
  id       String  @id @default(cuid())
  question String
  answer   String
  category String?
  order    Int     @default(0)
  active   Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("faqs")
}

model TeamMember {
  id       String  @id @default(cuid())
  name     String
  role     String
  bio      String?
  image    String?
  email    String?
  linkedin String?
  twitter  String?
  order    Int     @default(0)
  active   Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("team_members")
}

model CompanyInfo {
  id          String @id @default(cuid())
  key         String @unique
  value       String @db.Text
  description String?
  updatedAt   DateTime @updatedAt

  @@map("company_info")
}